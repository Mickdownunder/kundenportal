'use client';
import { useEffect, useState } from 'react';
import { useSession } from 'next-auth/react';
import { useRouter } from 'next/navigation';
import UploadForm from '../../components/UploadForm';
import DocumentList from '../../components/DocumentList';

const DIRECTUS_URL = process.env.NEXT_PUBLIC_DIRECTUS_URL || 'http://localhost:8055';
const DIRECTUS_TOKEN = process.env.NEXT_PUBLIC_DIRECTUS_TOKEN || 'PpLh4sXlyNo3PeiJu8H5oMGSObdGZEnr';

export default function PortalPage() {
  const { data: session } = useSession();
  const router = useRouter();
  const [project, setProject] = useState(null);
  const [documents, setDocuments] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (!session) {
      router.push('/login');
      return;
    }

    async function fetchData() {
      try {
        const projectRes = await fetch(`${DIRECTUS_URL}/items/Project?filter[userId][_eq]=${session.user.id}`, {
          headers: { Authorization: `Bearer ${DIRECTUS_TOKEN}` },
        });
        const { data: projects } = await projectRes.json();
        setProject(projects[0]);

        const docRes = await fetch(`${DIRECTUS_URL}/items/Document?filter[projectId][_eq]=${projects[0].id}`, {
          headers: { Authorization: `Bearer ${DIRECTUS_TOKEN}` },
        });
        const { data: docs } = await docRes.json();
        setDocuments(docs);
      } catch (error) {
        console.error('Fetch Error:', error);
      } finally {
        setLoading(false);
      }
    }

    fetchData();
  }, [session, router]);

  if (loading) return <div>Lade...</div>;

  return (
    <div>
      <h1>Willkommen in Ihrem Portal</h1>
      <h2>Projekt: {project?.name} (Status: {project?.status})</h2>
      <DocumentList documents={documents} />
      <UploadForm projectId={project?.id} />
    </div>
  );
}
